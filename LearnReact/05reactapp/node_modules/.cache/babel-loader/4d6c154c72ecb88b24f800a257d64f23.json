{"ast":null,"code":"var _jsxFileName = \"C:\\\\zhanjinjie\\\\workspace\\\\React\\\\LearnReact\\\\05reactapp\\\\src\\\\index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Redux, { createStore } from 'redux';\nimport { Povider, connect } from 'react-redux'; // 函数式计数器\n\nclass Counter extends Component {\n  render() {\n    console.log('====================================');\n    console.log(this.props);\n    console.log('====================================');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, \"\\u8BA1\\u6570\\u6570\\u91CF\\uFF1A\", this.props.value), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.numChange(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, \"\\u8BA1\\u6570+1\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.numChange(-1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, \"\\u8BA1\\u6570-1\"));\n  }\n\n} //1. 创建数据仓库\n\n\nconst store = createStore(reducer); //2.  数据处理函数\n// reduce 2个作用：一，初始化数据；二，通过获取动作改变数据。\n\nfunction reducer(state = {\n  num: 0\n}, action) {\n  switch (action.type) {\n    case 'add':\n      state.num++;\n      break;\n\n    case 'sub':\n      state.num--;\n      break;\n\n    default:\n      break;\n  } // return {...state}; // 旧版本需要对数据进行解构\n\n\n  return state;\n}\n\n; // 创建一个动作\n// const\n// 将state 映射到props 函数\n\nfunction mapStateToProps(state) {\n  return {\n    value: state.num\n  };\n} // 将修改state数据的方法 映射到props, 默认传入store里的dispatch方法。\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    numChange: () => {\n      dispatch();\n    }\n  };\n} //5. 监听数据的更改，重新渲染\n\n\nstore.subscribe(() => {\n  ReactDOM.render( /*#__PURE__*/React.createElement(Counter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }), document.getElementById('root'));\n});\nReactDOM.render( /*#__PURE__*/React.createElement(Counter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/zhanjinjie/workspace/React/LearnReact/05reactapp/src/index.js"],"names":["React","Component","ReactDOM","Redux","createStore","Povider","connect","Counter","render","console","log","props","value","numChange","store","reducer","state","num","action","type","mapStateToProps","mapDispatchToProps","dispatch","subscribe","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,aAAjC,C,CAEA;;AACA,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAC9BO,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAU,KAAKC,KAAL,CAAWC,KAArB,CAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,SAAX,CAAqB,CAArB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE;AAAQ,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,SAAX,CAAqB,CAAC,CAAtB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,CADF;AAQD;;AAb6B,C,CAgBhC;;;AACA,MAAMC,KAAK,GAAGV,WAAW,CAACW,OAAD,CAAzB,C,CAEA;AACA;;AACA,SAASA,OAAT,CAAiBC,KAAK,GAAG;AAAEC,EAAAA,GAAG,EAAE;AAAP,CAAzB,EAAqCC,MAArC,EAA4C;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACEH,MAAAA,KAAK,CAACC,GAAN;AACA;;AACF,SAAK,KAAL;AACED,MAAAA,KAAK,CAACC,GAAN;AACA;;AACF;AACE;AARJ,GAD0C,CAW1C;;;AACA,SAAOD,KAAP;AACD;;AAAA,C,CAED;AACA;AAEA;;AACA,SAASI,eAAT,CAAyBJ,KAAzB,EAAgC;AAC9B,SAAO;AACLJ,IAAAA,KAAK,EAAEI,KAAK,CAACC;AADR,GAAP;AAGD,C,CACD;;;AACA,SAASI,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLT,IAAAA,SAAS,EAAE,MAAI;AAACS,MAAAA,QAAQ;AAAG;AADtB,GAAP;AAGD,C,CAGD;;;AACAR,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpBrB,EAAAA,QAAQ,CAACM,MAAT,eACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEEgB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF;AAID,CALD;AAOAvB,QAAQ,CAACM,MAAT,eACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEgB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Redux, { createStore } from 'redux';\nimport { Povider, connect } from 'react-redux';\n\n// 函数式计数器\nclass Counter extends Component {\n  render() {\n    console.log('====================================');\n    console.log(this.props);\n    console.log('====================================');\n    return (\n      <div>\n        {/* 3. 获取数据 */}\n        <h1>计数数量：{this.props.value}</h1>\n        <button onClick={this.props.numChange(1)}>计数+1</button>\n        <button onClick={this.props.numChange(-1)}>计数-1</button>\n      </div>\n    )\n  }\n}\n\n//1. 创建数据仓库\nconst store = createStore(reducer);\n\n//2.  数据处理函数\n// reduce 2个作用：一，初始化数据；二，通过获取动作改变数据。\nfunction reducer(state = { num: 0 }, action){\n  switch (action.type) {\n    case 'add':\n      state.num++;\n      break;\n    case 'sub':\n      state.num--;\n      break;\n    default:\n      break;\n  }\n  // return {...state}; // 旧版本需要对数据进行解构\n  return state;\n};\n\n// 创建一个动作\n// const\n\n// 将state 映射到props 函数\nfunction mapStateToProps(state) {\n  return {\n    value: state.num\n  }\n}\n// 将修改state数据的方法 映射到props, 默认传入store里的dispatch方法。\nfunction mapDispatchToProps(dispatch) {\n  return {\n    numChange: ()=>{dispatch()}\n  }\n}\n\n\n//5. 监听数据的更改，重新渲染\nstore.subscribe(() => { \n  ReactDOM.render(\n    <Counter />,\n    document.getElementById('root')\n  );\n});\n\nReactDOM.render(\n  <Counter />,\n  document.getElementById('root')\n);\n\n"]},"metadata":{},"sourceType":"module"}