{"ast":null,"code":"var _jsxFileName = \"C:\\\\zhanjinjie\\\\workspace\\\\React\\\\LearnReact\\\\05reactapp\\\\src\\\\index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Redux, { createStore } from 'redux';\nimport App from './App'; // 函数式计数器\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.numChange = data => {\n      //4. 通过仓库的方法dispatch 进行数据修改\n      store.dispatch({\n        type: data > 0 ? 'add' : 'sub',\n        content: {\n          id: 1,\n          msg: 'hello world'\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, \"\\u8BA1\\u6570\\u6570\\u91CF\\uFF1A\", store.getState().num), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.numChange(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, \"\\u8BA1\\u6570+1\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.numChange(-1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, \"\\u8BA1\\u6570-1\"));\n  }\n\n} //1. 创建数据仓库\n\n\nconst store = createStore(reducer); //2.  数据处理函数\n// reduce 2个作用：一，初始化数据；二，通过获取动作改变数据。\n\nfunction reducer(state = {\n  num: 0\n}, action) {\n  switch (action.type) {\n    case 'add':\n      state.num++;\n      break;\n\n    case 'sub':\n      state.num--;\n      break;\n\n    default:\n      break;\n  } // return {...state}; // 旧版本需要对数据进行解构\n\n\n  return state;\n}\n\n; //5. 监听数据的更改，重新渲染\n\nstore.subscribe(() => {\n  ReactDOM.render( /*#__PURE__*/React.createElement(Counter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }), document.getElementById('root'));\n});\nReactDOM.render( /*#__PURE__*/React.createElement(Counter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/zhanjinjie/workspace/React/LearnReact/05reactapp/src/index.js"],"names":["React","Component","ReactDOM","Redux","createStore","App","Counter","numChange","data","store","dispatch","type","content","id","msg","render","getState","num","reducer","state","action","subscribe","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CAGA;;AACA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAY9BM,SAZ8B,GAYjBC,IAAD,IAAU;AACpB;AACAC,MAAAA,KAAK,CAACC,QAAN,CAAe;AACbC,QAAAA,IAAI,EAAGH,IAAI,GAAG,CAAP,GAAW,KAAX,GAAmB,KADb;AAEbI,QAAAA,OAAO,EAAE;AACPC,UAAAA,EAAE,EAAE,CADG;AAEPC,UAAAA,GAAG,EAAE;AAFE;AAFI,OAAf;AAOD,KArB6B;AAAA;;AAC9BC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAUN,KAAK,CAACO,QAAN,GAAiBC,GAA3B,CAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKV,SAAL,CAAe,CAAf,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKA,SAAL,CAAe,CAAC,CAAhB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,CADF;AAQD;;AAV6B,C,CAwBhC;;;AACA,MAAME,KAAK,GAAGL,WAAW,CAACc,OAAD,CAAzB,C,CAEA;AACA;;AACA,SAASA,OAAT,CAAiBC,KAAK,GAAG;AAAEF,EAAAA,GAAG,EAAE;AAAP,CAAzB,EAAqCG,MAArC,EAA4C;AAC1C,UAAQA,MAAM,CAACT,IAAf;AACE,SAAK,KAAL;AACEQ,MAAAA,KAAK,CAACF,GAAN;AACA;;AACF,SAAK,KAAL;AACEE,MAAAA,KAAK,CAACF,GAAN;AACA;;AACF;AACE;AARJ,GAD0C,CAW1C;;;AACA,SAAOE,KAAP;AACD;;AAAA,C,CAED;;AACAV,KAAK,CAACY,SAAN,CAAgB,MAAM;AACpBnB,EAAAA,QAAQ,CAACa,MAAT,eACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEEO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF;AAID,CALD;AAOArB,QAAQ,CAACa,MAAT,eACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Redux, { createStore } from 'redux'\nimport App from './App';\n\n\n// 函数式计数器\nclass Counter extends Component {\n  render() {\n    return (\n      <div>\n        {/* 3. 获取数据 */}\n        <h1>计数数量：{store.getState().num}</h1>\n        <button onClick={() => this.numChange(1)}>计数+1</button>\n        <button onClick={() => this.numChange(-1)}>计数-1</button>\n      </div>\n    )\n  }\n\n  numChange = (data) => {\n    //4. 通过仓库的方法dispatch 进行数据修改\n    store.dispatch({\n      type: (data > 0 ? 'add' : 'sub'),\n      content: {\n        id: 1,\n        msg: 'hello world'\n      }\n    });\n  }\n}\n\n//1. 创建数据仓库\nconst store = createStore(reducer);\n\n//2.  数据处理函数\n// reduce 2个作用：一，初始化数据；二，通过获取动作改变数据。\nfunction reducer(state = { num: 0 }, action){\n  switch (action.type) {\n    case 'add':\n      state.num++;\n      break;\n    case 'sub':\n      state.num--;\n      break;\n    default:\n      break;\n  }\n  // return {...state}; // 旧版本需要对数据进行解构\n  return state;\n};\n\n//5. 监听数据的更改，重新渲染\nstore.subscribe(() => { \n  ReactDOM.render(\n    <Counter />,\n    document.getElementById('root')\n  );\n});\n\nReactDOM.render(\n  <Counter />,\n  document.getElementById('root')\n);\n\n"]},"metadata":{},"sourceType":"module"}